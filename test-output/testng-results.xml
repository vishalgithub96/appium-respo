<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="3" passed="2" failed="0" skipped="1">
  <reporter-output>
  </reporter-output>
  <suite started-at="2024-05-05T00:29:52 IST" name="Default suite" finished-at="2024-05-05T00:29:52 IST" duration-ms="579">
    <groups>
    </groups>
    <test started-at="2024-05-05T00:29:52 IST" name="Default test" finished-at="2024-05-05T00:29:52 IST" duration-ms="579">
      <class name="testcases.TestExtentReports">
        <test-method is-config="true" signature="setupReport()[pri:0, instance:testcases.TestExtentReports@38145825]" started-at="2024-05-05T00:29:52 IST" name="setupReport" finished-at="2024-05-05T00:29:52 IST" duration-ms="261" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupReport -->
        <test-method signature="loginTest()[pri:0, instance:testcases.TestExtentReports@38145825]" started-at="2024-05-05T00:29:52 IST" name="loginTest" finished-at="2024-05-05T00:29:52 IST" duration-ms="11" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginTest -->
        <test-method is-config="true" signature="updateResults(org.testng.ITestResult)[pri:0, instance:testcases.TestExtentReports@38145825]" started-at="2024-05-05T00:29:52 IST" name="updateResults" finished-at="2024-05-05T00:29:52 IST" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=loginTest status=SUCCESS method=TestExtentReports.loginTest()[pri:0, instance:testcases.TestExtentReports@38145825] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updateResults -->
        <test-method signature="userRegTest()[pri:1, instance:testcases.TestExtentReports@38145825]" started-at="2024-05-05T00:29:52 IST" name="userRegTest" finished-at="2024-05-05T00:29:52 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- userRegTest -->
        <test-method is-config="true" signature="updateResults(org.testng.ITestResult)[pri:0, instance:testcases.TestExtentReports@38145825]" started-at="2024-05-05T00:29:52 IST" name="updateResults" finished-at="2024-05-05T00:29:52 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=userRegTest status=SUCCESS method=TestExtentReports.userRegTest()[pri:1, instance:testcases.TestExtentReports@38145825] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updateResults -->
        <test-method signature="skipTest()[pri:2, instance:testcases.TestExtentReports@38145825]" started-at="2024-05-05T00:29:52 IST" name="skipTest" finished-at="2024-05-05T00:29:52 IST" duration-ms="3" status="SKIP">
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[skipping the test cases]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: skipping the test cases
at testcases.TestExtentReports.skipTest(TestExtentReports.java:63)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:664)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:228)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:961)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:201)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:819)
at org.testng.TestRunner.run(TestRunner.java:619)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:443)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:437)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:397)
at org.testng.SuiteRunner.run(SuiteRunner.java:336)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1228)
at org.testng.TestNG.runSuites(TestNG.java:1134)
at org.testng.TestNG.run(TestNG.java:1101)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- skipTest -->
        <test-method is-config="true" signature="updateResults(org.testng.ITestResult)[pri:0, instance:testcases.TestExtentReports@38145825]" started-at="2024-05-05T00:29:52 IST" name="updateResults" finished-at="2024-05-05T00:29:52 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=skipTest status=SKIP method=TestExtentReports.skipTest()[pri:2, instance:testcases.TestExtentReports@38145825] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updateResults -->
        <test-method is-config="true" signature="endReport()[pri:0, instance:testcases.TestExtentReports@38145825]" started-at="2024-05-05T00:29:52 IST" name="endReport" finished-at="2024-05-05T00:29:52 IST" duration-ms="256" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endReport -->
      </class> <!-- testcases.TestExtentReports -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
